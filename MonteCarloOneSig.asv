clear all;

s = [0 0.1 0.21];%element distance from reference
trueFrequency = 6e9;%carrier frequency


%ADC params
n= 20000; %number of samples
Fs = 4e9; %sampling frequency
Flo=5.8e9; %intermediate frequency. 5e9, 11e9, 15e9 for low, mid, high frequencies.

%Parameters to generate signal and splitting it into each channel
measuredDoA = [40 50];
trueAzim = measuredDoA(1)*(pi/180);%True DOA in Azimuth
trueElev = measuredDoA(2)*(pi/180);%True DOA in Elevation
dc = 0.1;%duty cycle for pulse signal
Fif = 0.2e9;%Baseband signal
signal = GeneratePulse(Fif,Fs,n,dc);
%signal = GenerateContinuous(Fif,Fs,n,dc);
%signal = GenerateChirp(Fif,Fs,n,dc);
fftSignal = HalfFFT(signal);%Get signal fft
plot(abs(fftSignal));
%Monte-Carlo sim parameters
numOfRuns=1;

data = zeros(2,numOfRuns);




for snr = 0:0.1:20
    datInd=1;
    errorAz=zeros(numOfRuns);
    errorEl=zeros(numOfRuns);
    for runNumber = 1:numOfRuns
        
    horChannels = GenerateChannels(signal, s, trueAzim, trueFrequency);%Generates signal in each horizontal channel and adds phase to each
    verChannels = GenerateChannels(signal, s, trueElev, trueFrequency);%Generates signal in each vertical channel and adds phase to each
    
    horChannels = awgn(horChannels, snr, "measured");%Add noise to horizontal channels
    verChannels = awgn(verChannels, snr, "measured");%Add noise to vertical channels
    
    fftHorChannels = HalfFFT(horChannels);%Get the fft of horizntal channels
    fftVerChannels = HalfFFT(verChannels);%Get the fft of vertical channels
    
    indices = FindDominantSignal(fftHorChannels);%Getting indices of dominant frequencies for horizontal array
    indices = findMiddleIndices(indices);

    if(length(indices)==1)
    horPhases = FindDominantSignalPhase(indices,fftHorChannels);%Getting phase of dominant frequencies for horizontal array
    verPhases = FindDominantSignalPhase(indices,fftVerChannels);%Getting phase of dominant frequencies for vertiical array

    for k = 1:width(horPhases)
        horPhaseShift(:,k) = (horPhases(:,k) - horPhases(1,k));%calculating horizontal phase shift from reference
        verPhaseShift(:,k) = (verPhases(:,k) - verPhases(1,k));%calculating vertical phase shift from reference
    end
    fif=(n/2-indices)*2e5;%Converting index to corresponding IF
    frequency = fif+Flo;%Converting baseband frequency to RF frequency.

    [azim2,azim3]=CalculateAoA(horPhaseShift,s,frequency);
    calculatedAz = azim3*180/pi;

    [elev2,elev3]=CalculateAoA(verPhaseShift,s,frequency);
    calculatedEl = elev3*180/pi;
    
    errorAz(datInd) = measuredDoA(1) - calculatedAz;
    errorEl(datInd) = measuredDoA(2) - calculatedEl;
    
    datInd=datInd+1;
    end
    end
    RMSEAz = sqrt(mean(errorAz.^2));
    RMSEEl = sqrt(mean(errorEl.^2));
end



%plotting results
scatter(data(1,:),data(2,:))
xlabel("SNR(dB)")
ylabel("Error (deg)")